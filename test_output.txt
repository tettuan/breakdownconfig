[0m[32mCheck[0m file:///Users/tettuan/github/breakdownconfig/tests/basic/config_loader_test.ts
[0m[32mCheck[0m file:///Users/tettuan/github/breakdownconfig/tests/config/basic_success_test.ts
[0m[32mCheck[0m file:///Users/tettuan/github/breakdownconfig/tests/config/custom_config_test.ts
[0m[32mCheck[0m file:///Users/tettuan/github/breakdownconfig/tests/config/error_test.ts
[0m[32mCheck[0m file:///Users/tettuan/github/breakdownconfig/tests/config/loading_test.ts
[0m[32mCheck[0m file:///Users/tettuan/github/breakdownconfig/tests/config/path_test.ts
[0m[32mCheck[0m file:///Users/tettuan/github/breakdownconfig/tests/config/success_test.ts
[0m[32mCheck[0m file:///Users/tettuan/github/breakdownconfig/tests/config/validation_test.ts
[0m[32mCheck[0m file:///Users/tettuan/github/breakdownconfig/tests/custom_config_test.ts
[0m[32mCheck[0m file:///Users/tettuan/github/breakdownconfig/tests/err1002/config_loading_test.ts
[0m[32mCheck[0m file:///Users/tettuan/github/breakdownconfig/tests/err1002/invalid_yaml_test.ts
[0m[32mCheck[0m file:///Users/tettuan/github/breakdownconfig/tests/err1002/load_test.ts
[0m[32mCheck[0m file:///Users/tettuan/github/breakdownconfig/tests/err1002/malformed_config_test.ts
[0m[32mCheck[0m file:///Users/tettuan/github/breakdownconfig/tests/err1002/undefined_prefix_test.ts
[0m[32mCheck[0m file:///Users/tettuan/github/breakdownconfig/tests/error_handling_patterns_test.ts
[0m[32mCheck[0m file:///Users/tettuan/github/breakdownconfig/tests/error_propagation_patterns_test.ts
[0m[32mCheck[0m file:///Users/tettuan/github/breakdownconfig/tests/error_recovery_patterns_test.ts
[0m[32mCheck[0m file:///Users/tettuan/github/breakdownconfig/tests/functional/result_operations_test.ts
[0m[32mCheck[0m file:///Users/tettuan/github/breakdownconfig/tests/integration/error_handling_integration_test.ts
[0m[32mCheck[0m file:///Users/tettuan/github/breakdownconfig/tests/integration/happy_path_integration_test.ts
[0m[32mCheck[0m file:///Users/tettuan/github/breakdownconfig/tests/integration/phase4_type_system_integration_test.ts
[0m[32mCheck[0m file:///Users/tettuan/github/breakdownconfig/tests/integration/result_type_performance_test.ts
[0m[32mCheck[0m file:///Users/tettuan/github/breakdownconfig/tests/performance/large_config_test.ts
[0m[32mCheck[0m file:///Users/tettuan/github/breakdownconfig/tests/src/config_test.ts
[0m[32mCheck[0m file:///Users/tettuan/github/breakdownconfig/tests/undefined_handling_test.ts
[0m[1mTS2459 [0m[ERROR]: Module '"file:///Users/tettuan/github/breakdownconfig/src/errors/standardized_error_codes.ts"' declares 'StandardErrorCode' locally, but it is not exported.
import { ErrorCodeRegistry, StandardErrorCode } from "./standardized_error_codes.ts";
[0m[31m                            ~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/enhanced_i18n_system.ts[0m:[0m[33m9[0m:[0m[33m29[0m

    'StandardErrorCode' is declared here.
    import { ErrorCategory, ErrorSeverity, StandardErrorCode } from "./unified_error_interface.ts";
    [0m[36m                                       ~~~~~~~~~~~~~~~~~[0m
        at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/standardized_error_codes.ts[0m:[0m[33m11[0m:[0m[33m40[0m

[0m[1mTS2538 [0m[ERROR]: Type 'unknown' cannot be used as an index type.
      const metadata = ErrorCodeRegistry[code];
[0m[31m                                         ~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/enhanced_i18n_system.ts[0m:[0m[33m153[0m:[0m[33m42[0m

[0m[1mTS2538 [0m[ERROR]: Type 'unknown' cannot be used as an index type.
        bundle[code] = {
[0m[31m               ~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/enhanced_i18n_system.ts[0m:[0m[33m155[0m:[0m[33m16[0m

[0m[1mTS7006 [0m[ERROR]: Parameter 'suggestion' implicitly has an 'any' type.
          recoverySuggestions: metadata.recoverySuggestions?.map((suggestion) => ({
[0m[31m                                                                  ~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/enhanced_i18n_system.ts[0m:[0m[33m167[0m:[0m[33m67[0m

[0m[1mTS2322 [0m[ERROR]: Type '{ [x: string]: unknown; }' is not assignable to type 'MessageParams'.
  'string' index signatures are incompatible.
    Type 'unknown' is not assignable to type 'string | number | boolean | Date | null | undefined'.
      params,
[0m[31m      ~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/enhanced_i18n_system.ts[0m:[0m[33m263[0m:[0m[33m7[0m

    The expected type comes from property 'params' which is declared here on type 'MessageContext'
      params?: MessageParams;
    [0m[36m  ~~~~~~[0m
        at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/enhanced_i18n_system.ts[0m:[0m[33m83[0m:[0m[33m3[0m

[0m[1mTS4114 [0m[ERROR]: This member must have an 'override' modifier because it overrides a member in the base class 'ConfigurationError'.
  getFormattedMessage(): string {
[0m[31m  ~~~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/polymorphic_error_system.ts[0m:[0m[33m207[0m:[0m[33m3[0m

[0m[1mTS4114 [0m[ERROR]: This member must have an 'override' modifier because it overrides a member in the base class 'ValidationError'.
  getFormattedMessage(): string {
[0m[31m  ~~~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/polymorphic_error_system.ts[0m:[0m[33m275[0m:[0m[33m3[0m

[0m[1mTS2416 [0m[ERROR]: Property 'severity' in type 'UnknownError' is not assignable to the same property in base type 'SystemError'.
  Type 'ErrorSeverity.ERROR' is not assignable to type 'ErrorSeverity.CRITICAL'.
  readonly severity = ErrorSeverity.ERROR;
[0m[31m           ~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/polymorphic_error_system.ts[0m:[0m[33m384[0m:[0m[33m12[0m

[0m[1mTS4114 [0m[ERROR]: This member must have an 'override' modifier because it overrides a member in the base class 'SystemError'.
  readonly severity = ErrorSeverity.ERROR;
[0m[31m           ~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/polymorphic_error_system.ts[0m:[0m[33m384[0m:[0m[33m12[0m

[0m[1mTS4114 [0m[ERROR]: This member must have an 'override' modifier because it overrides a member in the base class 'SystemError'.
  isRecoverable(): boolean {
[0m[31m  ~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/polymorphic_error_system.ts[0m:[0m[33m404[0m:[0m[33m3[0m

[0m[1mTS1205 [0m[ERROR]: Re-exporting a type when 'isolatedModules' is enabled requires using 'export type'.
  BaseErrorInterface,
[0m[31m  ~~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m19[0m:[0m[33m3[0m

[0m[1mTS2305 [0m[ERROR]: Module '"file:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_implementation.ts"' has no exported member 'ConfigurationError'.
  ConfigurationError,
[0m[31m  ~~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m26[0m:[0m[33m3[0m

[0m[1mTS2305 [0m[ERROR]: Module '"file:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_implementation.ts"' has no exported member 'ValidationError'.
  ValidationError,
[0m[31m  ~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m27[0m:[0m[33m3[0m

[0m[1mTS2305 [0m[ERROR]: Module '"file:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_implementation.ts"' has no exported member 'PathSecurityError'.
  PathSecurityError,
[0m[31m  ~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m28[0m:[0m[33m3[0m

[0m[1mTS2305 [0m[ERROR]: Module '"file:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_implementation.ts"' has no exported member 'SystemError'.
  SystemError,
[0m[31m  ~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m29[0m:[0m[33m3[0m

[0m[1mTS2305 [0m[ERROR]: Module '"file:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_implementation.ts"' has no exported member 'ConfigFileNotFoundError'.
  ConfigFileNotFoundError,
[0m[31m  ~~~~~~~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m32[0m:[0m[33m3[0m

[0m[1mTS2305 [0m[ERROR]: Module '"file:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_implementation.ts"' has no exported member 'ConfigParseError'.
  ConfigParseError,
[0m[31m  ~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m33[0m:[0m[33m3[0m

[0m[1mTS2305 [0m[ERROR]: Module '"file:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_implementation.ts"' has no exported member 'RequiredFieldMissingError'.
  RequiredFieldMissingError,
[0m[31m  ~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m34[0m:[0m[33m3[0m

[0m[1mTS2305 [0m[ERROR]: Module '"file:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_implementation.ts"' has no exported member 'TypeMismatchError'.
  TypeMismatchError,
[0m[31m  ~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m35[0m:[0m[33m3[0m

[0m[1mTS2305 [0m[ERROR]: Module '"file:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_implementation.ts"' has no exported member 'PathTraversalError'.
  PathTraversalError,
[0m[31m  ~~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m36[0m:[0m[33m3[0m

[0m[1mTS2305 [0m[ERROR]: Module '"file:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_implementation.ts"' has no exported member 'UnknownError'.
  UnknownError,
[0m[31m  ~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m37[0m:[0m[33m3[0m

[0m[1mTS1205 [0m[ERROR]: Re-exporting a type when 'isolatedModules' is enabled requires using 'export type'.
  MessageContext,
[0m[31m  ~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m58[0m:[0m[33m3[0m

[0m[1mTS1205 [0m[ERROR]: Re-exporting a type when 'isolatedModules' is enabled requires using 'export type'.
  MessageParams,
[0m[31m  ~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m59[0m:[0m[33m3[0m

[0m[1mTS1205 [0m[ERROR]: Re-exporting a type when 'isolatedModules' is enabled requires using 'export type'.
  MessageTemplate,
[0m[31m  ~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m62[0m:[0m[33m3[0m

[0m[1mTS1205 [0m[ERROR]: Re-exporting a type when 'isolatedModules' is enabled requires using 'export type'.
  ErrorMessageDefinition
[0m[31m  ~~~~~~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m63[0m:[0m[33m3[0m

[0m[1mTS1205 [0m[ERROR]: Re-exporting a type when 'isolatedModules' is enabled requires using 'export type'.
  ErrorCodeMetadata
[0m[31m  ~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m70[0m:[0m[33m3[0m

[0m[1mTS1205 [0m[ERROR]: Re-exporting a type when 'isolatedModules' is enabled requires using 'export type'.
  UnifiedErrorManager,
[0m[31m  ~~~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m75[0m:[0m[33m3[0m

[0m[1mTS1205 [0m[ERROR]: Re-exporting a type when 'isolatedModules' is enabled requires using 'export type'.
  ErrorHandler,
[0m[31m  ~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m76[0m:[0m[33m3[0m

[0m[1mTS1205 [0m[ERROR]: Re-exporting a type when 'isolatedModules' is enabled requires using 'export type'.
  ErrorFactory,
[0m[31m  ~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m77[0m:[0m[33m3[0m

[0m[1mTS1205 [0m[ERROR]: Re-exporting a type when 'isolatedModules' is enabled requires using 'export type'.
  ErrorAggregator,
[0m[31m  ~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m78[0m:[0m[33m3[0m

[0m[1mTS1205 [0m[ERROR]: Re-exporting a type when 'isolatedModules' is enabled requires using 'export type'.
  ErrorReporter,
[0m[31m  ~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m79[0m:[0m[33m3[0m

[0m[1mTS1205 [0m[ERROR]: Re-exporting a type when 'isolatedModules' is enabled requires using 'export type'.
  ErrorMetrics,
[0m[31m  ~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m80[0m:[0m[33m3[0m

[0m[1mTS1205 [0m[ERROR]: Re-exporting a type when 'isolatedModules' is enabled requires using 'export type'.
  ErrorTransformer,
[0m[31m  ~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m81[0m:[0m[33m3[0m

[0m[1mTS1205 [0m[ERROR]: Re-exporting a type when 'isolatedModules' is enabled requires using 'export type'.
  ErrorSerializer,
[0m[31m  ~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m82[0m:[0m[33m3[0m

[0m[1mTS1205 [0m[ERROR]: Re-exporting a type when 'isolatedModules' is enabled requires using 'export type'.
  ErrorValidator,
[0m[31m  ~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m83[0m:[0m[33m3[0m

[0m[1mTS1205 [0m[ERROR]: Re-exporting a type when 'isolatedModules' is enabled requires using 'export type'.
  ErrorConfiguration,
[0m[31m  ~~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m84[0m:[0m[33m3[0m

[0m[1mTS1205 [0m[ERROR]: Re-exporting a type when 'isolatedModules' is enabled requires using 'export type'.
  ErrorLifecycleHooks,
[0m[31m  ~~~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m85[0m:[0m[33m3[0m

[0m[1mTS1205 [0m[ERROR]: Re-exporting a type when 'isolatedModules' is enabled requires using 'export type'.
  ErrorI18nConfig,
[0m[31m  ~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m86[0m:[0m[33m3[0m

[0m[1mTS1205 [0m[ERROR]: Re-exporting a type when 'isolatedModules' is enabled requires using 'export type'.
  ErrorRecoveryStrategy,
[0m[31m  ~~~~~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m87[0m:[0m[33m3[0m

[0m[1mTS1205 [0m[ERROR]: Re-exporting a type when 'isolatedModules' is enabled requires using 'export type'.
  ErrorContext,
[0m[31m  ~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m88[0m:[0m[33m3[0m

[0m[1mTS1205 [0m[ERROR]: Re-exporting a type when 'isolatedModules' is enabled requires using 'export type'.
  UnifiedErrorInterface
[0m[31m  ~~~~~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m89[0m:[0m[33m3[0m

[0m[1mTS1205 [0m[ERROR]: Re-exporting a type when 'isolatedModules' is enabled requires using 'export type'.
  UnifiedError,
[0m[31m  ~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m94[0m:[0m[33m3[0m

[0m[1mTS1205 [0m[ERROR]: Re-exporting a type when 'isolatedModules' is enabled requires using 'export type'.
  PathErrorReason,
[0m[31m  ~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m97[0m:[0m[33m3[0m

[0m[1mTS1205 [0m[ERROR]: Re-exporting a type when 'isolatedModules' is enabled requires using 'export type'.
  ValidationViolation
[0m[31m  ~~~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m98[0m:[0m[33m3[0m

[0m[1mTS2304 [0m[ERROR]: Cannot find name 'createError'.
    createError.configFileNotFound(path, type),
[0m[31m    ~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m120[0m:[0m[33m5[0m

[0m[1mTS2304 [0m[ERROR]: Cannot find name 'createError'.
    createError.configParseError(path, syntaxError, line, column),
[0m[31m    ~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m126[0m:[0m[33m5[0m

[0m[1mTS2304 [0m[ERROR]: Cannot find name 'createError'.
    createError.requiredFieldMissing(field, parent),
[0m[31m    ~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m132[0m:[0m[33m5[0m

[0m[1mTS2304 [0m[ERROR]: Cannot find name 'createError'.
    createError.typeMismatch(field, expected, actual, value),
[0m[31m    ~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m138[0m:[0m[33m5[0m

[0m[1mTS2304 [0m[ERROR]: Cannot find name 'createError'.
    createError.pathTraversal(path, field),
[0m[31m    ~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m144[0m:[0m[33m5[0m

[0m[1mTS2304 [0m[ERROR]: Cannot find name 'createError'.
    createError.unknown(error, context)
[0m[31m    ~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m150[0m:[0m[33m5[0m

[0m[1mTS2304 [0m[ERROR]: Cannot find name 'BaseErrorInterface'.
  ): Promise<{ success: true; data: T } | { success: false; error: BaseErrorInterface }> {
[0m[31m                                                                   ~~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m163[0m:[0m[33m68[0m

[0m[1mTS2304 [0m[ERROR]: Cannot find name 'ErrorUtils'.
      const unifiedError = ErrorUtils.toUnifiedError(error, context);
[0m[31m                           ~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m168[0m:[0m[33m28[0m

[0m[1mTS2304 [0m[ERROR]: Cannot find name 'unifiedErrorManager'.
      await unifiedErrorManager.processError(unifiedError);
[0m[31m            ~~~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m169[0m:[0m[33m13[0m

[0m[1mTS2304 [0m[ERROR]: Cannot find name 'BaseErrorInterface'.
  ): { success: true; data: T } | { success: false; error: BaseErrorInterface } {
[0m[31m                                                           ~~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m180[0m:[0m[33m60[0m

[0m[1mTS2304 [0m[ERROR]: Cannot find name 'ErrorUtils'.
      const unifiedError = ErrorUtils.toUnifiedError(error, context);
[0m[31m                           ~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m185[0m:[0m[33m28[0m

[0m[1mTS2304 [0m[ERROR]: Cannot find name 'unifiedErrorManager'.
      unifiedErrorManager.processError(unifiedError);
[0m[31m      ~~~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m187[0m:[0m[33m7[0m

[0m[1mTS2304 [0m[ERROR]: Cannot find name 'BaseErrorInterface'.
  ): (...args: T) => { success: true; data: R } | { success: false; error: BaseErrorInterface } {
[0m[31m                                                                           ~~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m198[0m:[0m[33m76[0m

[0m[1mTS2304 [0m[ERROR]: Cannot find name 'BaseErrorInterface'.
  ): (...args: T) => Promise<{ success: true; data: R } | { success: false; error: BaseErrorInterface }> {
[0m[31m                                                                                   ~~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m210[0m:[0m[33m84[0m

[0m[1mTS2304 [0m[ERROR]: Cannot find name 'unifiedErrorManager'.
    const report = unifiedErrorManager.getErrorReport();
[0m[31m                   ~~~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m225[0m:[0m[33m20[0m

[0m[1mTS2304 [0m[ERROR]: Cannot find name 'ErrorSeverity'.
      `  Critical Errors: ${report.summary.bySeverity[ErrorSeverity.CRITICAL] || 0}`,
[0m[31m                                                      ~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m232[0m:[0m[33m55[0m

[0m[1mTS18046 [0m[ERROR]: 'count' is of type 'unknown'.
        .filter(([_, count]) => count > 0)
[0m[31m                                ~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m240[0m:[0m[33m33[0m

[0m[1mTS18046 [0m[ERROR]: 'count' is of type 'unknown'.
        .filter(([_, count]) => count > 0)
[0m[31m                                ~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m245[0m:[0m[33m33[0m

[0m[1mTS7006 [0m[ERROR]: Parameter 'error' implicitly has an 'any' type.
      ...report.recentErrors.slice(-5).map(error =>
[0m[31m                                           ~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m249[0m:[0m[33m44[0m

[0m[1mTS2304 [0m[ERROR]: Cannot find name 'unifiedErrorManager'.
    const report = unifiedErrorManager.getErrorReport();
[0m[31m                   ~~~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m265[0m:[0m[33m20[0m

[0m[1mTS2304 [0m[ERROR]: Cannot find name 'ErrorSeverity'.
    const criticalCount = report.summary.bySeverity[ErrorSeverity.CRITICAL] || 0;
[0m[31m                                                    ~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m272[0m:[0m[33m53[0m

[0m[1mTS2304 [0m[ERROR]: Cannot find name 'ErrorCategory'.
    const configErrors = report.summary.byCategory[ErrorCategory.CONFIGURATION] || 0;
[0m[31m                                                   ~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m288[0m:[0m[33m52[0m

[0m[1mTS2304 [0m[ERROR]: Cannot find name 'ErrorCategory'.
    const securityErrors = report.summary.byCategory[ErrorCategory.PATH_SECURITY] || 0;
[0m[31m                                                     ~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m296[0m:[0m[33m54[0m

[0m[1mTS2304 [0m[ERROR]: Cannot find name 'unifiedErrorManager'.
    const errors = unifiedErrorManager.getAggregator().getErrors();
[0m[31m                   ~~~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m315[0m:[0m[33m20[0m

[0m[1mTS7006 [0m[ERROR]: Parameter 'error' implicitly has an 'any' type.
      const rows = errors.map(error => [
[0m[31m                              ~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m319[0m:[0m[33m31[0m

[0m[1mTS7006 [0m[ERROR]: Parameter 'row' implicitly has an 'any' type.
      return [headers.join(','), ...rows.map(row => row.join(','))].join('\n');
[0m[31m                                             ~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m328[0m:[0m[33m46[0m

[0m[1mTS7006 [0m[ERROR]: Parameter 'error' implicitly has an 'any' type.
    return JSON.stringify(errors.map(error => ({
[0m[31m                                     ~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m332[0m:[0m[33m38[0m

[0m[1mTS2304 [0m[ERROR]: Cannot find name 'ErrorConfiguration'.
  development: (): ErrorConfiguration => ({
[0m[31m                   ~~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m351[0m:[0m[33m20[0m

[0m[1mTS2304 [0m[ERROR]: Cannot find name 'ErrorConfiguration'.
  production: (): ErrorConfiguration => ({
[0m[31m                  ~~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m363[0m:[0m[33m19[0m

[0m[1mTS2304 [0m[ERROR]: Cannot find name 'ErrorConfiguration'.
  testing: (): ErrorConfiguration => ({
[0m[31m               ~~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m375[0m:[0m[33m16[0m

[0m[1mTS2304 [0m[ERROR]: Cannot find name 'ErrorConfiguration'.
  customConfig?: Partial<ErrorConfiguration>
[0m[31m                         ~~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m390[0m:[0m[33m26[0m

[0m[1mTS2304 [0m[ERROR]: Cannot find name 'CompleteUnifiedErrorManager'.
): CompleteUnifiedErrorManager {
[0m[31m   ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m391[0m:[0m[33m4[0m

[0m[1mTS2304 [0m[ERROR]: Cannot find name 'unifiedErrorManager'.
  unifiedErrorManager.configure(finalConfig);
[0m[31m  ~~~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m395[0m:[0m[33m3[0m

[0m[1mTS2304 [0m[ERROR]: Cannot find name 'unifiedErrorManager'.
  return unifiedErrorManager;
[0m[31m         ~~~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts[0m:[0m[33m399[0m:[0m[33m10[0m

[0m[1mTS2323 [0m[ERROR]: Cannot redeclare exported variable 'ProductionErrorAggregator'.
export class ProductionErrorAggregator implements ErrorAggregator {
[0m[31m             ~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_implementation.ts[0m:[0m[33m49[0m:[0m[33m14[0m

[0m[1mTS2323 [0m[ERROR]: Cannot redeclare exported variable 'ConsoleErrorReporter'.
export class ConsoleErrorReporter implements ErrorReporter {
[0m[31m             ~~~~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_implementation.ts[0m:[0m[33m124[0m:[0m[33m14[0m

[0m[1mTS2323 [0m[ERROR]: Cannot redeclare exported variable 'MemoryErrorMetrics'.
export class MemoryErrorMetrics implements ErrorMetrics {
[0m[31m             ~~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_implementation.ts[0m:[0m[33m183[0m:[0m[33m14[0m

[0m[1mTS2323 [0m[ERROR]: Cannot redeclare exported variable 'JsonErrorSerializer'.
export class JsonErrorSerializer implements ErrorSerializer {
[0m[31m             ~~~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_implementation.ts[0m:[0m[33m275[0m:[0m[33m14[0m

[0m[1mTS2323 [0m[ERROR]: Cannot redeclare exported variable 'BasicErrorValidator'.
export class BasicErrorValidator implements ErrorValidator {
[0m[31m             ~~~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_implementation.ts[0m:[0m[33m342[0m:[0m[33m14[0m

[0m[1mTS2323 [0m[ERROR]: Cannot redeclare exported variable 'CompleteUnifiedErrorManager'.
export class CompleteUnifiedErrorManager implements UnifiedErrorManager {
[0m[31m             ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_implementation.ts[0m:[0m[33m389[0m:[0m[33m14[0m

[0m[1mTS2322 [0m[ERROR]: Type 'Record<string, unknown> | undefined' is not assignable to type 'MessageParams | undefined'.
  Type 'Record<string, unknown>' is not assignable to type 'MessageParams'.
    'string' index signatures are incompatible.
      Type 'unknown' is not assignable to type 'string | number | boolean | Date | null | undefined'.
      params: error.context,
[0m[31m      ~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_implementation.ts[0m:[0m[33m512[0m:[0m[33m7[0m

    The expected type comes from property 'params' which is declared here on type 'MessageContext'
      params?: MessageParams;
    [0m[36m  ~~~~~~[0m
        at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/enhanced_i18n_system.ts[0m:[0m[33m83[0m:[0m[33m3[0m

[0m[1mTS1205 [0m[ERROR]: Re-exporting a type when 'isolatedModules' is enabled requires using 'export type'.
  BaseErrorInterface,
[0m[31m  ~~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_implementation.ts[0m:[0m[33m629[0m:[0m[33m3[0m

[0m[1mTS2323 [0m[ERROR]: Cannot redeclare exported variable 'BasicErrorValidator'.
  BasicErrorValidator,
[0m[31m  ~~~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_implementation.ts[0m:[0m[33m630[0m:[0m[33m3[0m

[0m[1mTS2484 [0m[ERROR]: Export declaration conflicts with exported declaration of 'BasicErrorValidator'.
  BasicErrorValidator,
[0m[31m  ~~~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_implementation.ts[0m:[0m[33m630[0m:[0m[33m3[0m

[0m[1mTS2323 [0m[ERROR]: Cannot redeclare exported variable 'CompleteUnifiedErrorManager'.
  CompleteUnifiedErrorManager,
[0m[31m  ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_implementation.ts[0m:[0m[33m631[0m:[0m[33m3[0m

[0m[1mTS2484 [0m[ERROR]: Export declaration conflicts with exported declaration of 'CompleteUnifiedErrorManager'.
  CompleteUnifiedErrorManager,
[0m[31m  ~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_implementation.ts[0m:[0m[33m631[0m:[0m[33m3[0m

[0m[1mTS2323 [0m[ERROR]: Cannot redeclare exported variable 'ConsoleErrorReporter'.
  ConsoleErrorReporter,
[0m[31m  ~~~~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_implementation.ts[0m:[0m[33m632[0m:[0m[33m3[0m

[0m[1mTS2484 [0m[ERROR]: Export declaration conflicts with exported declaration of 'ConsoleErrorReporter'.
  ConsoleErrorReporter,
[0m[31m  ~~~~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_implementation.ts[0m:[0m[33m632[0m:[0m[33m3[0m

[0m[1mTS2323 [0m[ERROR]: Cannot redeclare exported variable 'JsonErrorSerializer'.
  JsonErrorSerializer,
[0m[31m  ~~~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_implementation.ts[0m:[0m[33m644[0m:[0m[33m3[0m

[0m[1mTS2484 [0m[ERROR]: Export declaration conflicts with exported declaration of 'JsonErrorSerializer'.
  JsonErrorSerializer,
[0m[31m  ~~~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_implementation.ts[0m:[0m[33m644[0m:[0m[33m3[0m

[0m[1mTS2323 [0m[ERROR]: Cannot redeclare exported variable 'MemoryErrorMetrics'.
  MemoryErrorMetrics,
[0m[31m  ~~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_implementation.ts[0m:[0m[33m646[0m:[0m[33m3[0m

[0m[1mTS2484 [0m[ERROR]: Export declaration conflicts with exported declaration of 'MemoryErrorMetrics'.
  MemoryErrorMetrics,
[0m[31m  ~~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_implementation.ts[0m:[0m[33m646[0m:[0m[33m3[0m

[0m[1mTS1205 [0m[ERROR]: Re-exporting a type when 'isolatedModules' is enabled requires using 'export type'.
  MessageContext,
[0m[31m  ~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_implementation.ts[0m:[0m[33m647[0m:[0m[33m3[0m

[0m[1mTS2323 [0m[ERROR]: Cannot redeclare exported variable 'ProductionErrorAggregator'.
  ProductionErrorAggregator,
[0m[31m  ~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_implementation.ts[0m:[0m[33m651[0m:[0m[33m3[0m

[0m[1mTS2484 [0m[ERROR]: Export declaration conflicts with exported declaration of 'ProductionErrorAggregator'.
  ProductionErrorAggregator,
[0m[31m  ~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_implementation.ts[0m:[0m[33m651[0m:[0m[33m3[0m

[0m[1mTS2304 [0m[ERROR]: Cannot find name 'Result'.
  const transformedResult = Result.flatMap(configResult, (config) => {
[0m[31m                            ~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/config/success_test.ts[0m:[0m[33m144[0m:[0m[33m29[0m

[0m[1mTS7006 [0m[ERROR]: Parameter 'config' implicitly has an 'any' type.
  const transformedResult = Result.flatMap(configResult, (config) => {
[0m[31m                                                          ~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/config/success_test.ts[0m:[0m[33m144[0m:[0m[33m59[0m

[0m[1mTS2304 [0m[ERROR]: Cannot find name 'Result'.
      return Result.err({
[0m[31m             ~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/config/success_test.ts[0m:[0m[33m146[0m:[0m[33m14[0m

[0m[1mTS2304 [0m[ERROR]: Cannot find name 'Result'.
    return Result.ok(config.working_dir);
[0m[31m           ~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/config/success_test.ts[0m:[0m[33m154[0m:[0m[33m12[0m

[0m[1mTS2304 [0m[ERROR]: Cannot find name 'Result'.
  const upperCaseResult = Result.map(transformedResult, (workingDir: string) => workingDir.toUpperCase());
[0m[31m                          ~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/config/success_test.ts[0m:[0m[33m157[0m:[0m[33m27[0m

[0m[1mTS18046 [0m[ERROR]: 'upperWorkingDir' is of type 'unknown'.
  assert(upperWorkingDir.length > 0, "Working dir should not be empty");
[0m[31m         ~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/config/success_test.ts[0m:[0m[33m164[0m:[0m[33m10[0m

[0m[1mTS2304 [0m[ERROR]: Cannot find name 'Result'.
  const validationResult = Result.flatMap(configResult, (config) => {
[0m[31m                           ~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/config/success_test.ts[0m:[0m[33m172[0m:[0m[33m28[0m

[0m[1mTS7006 [0m[ERROR]: Parameter 'config' implicitly has an 'any' type.
  const validationResult = Result.flatMap(configResult, (config) => {
[0m[31m                                                         ~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/config/success_test.ts[0m:[0m[33m172[0m:[0m[33m58[0m

[0m[1mTS2304 [0m[ERROR]: Cannot find name 'Result'.
      return Result.err({
[0m[31m             ~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/config/success_test.ts[0m:[0m[33m177[0m:[0m[33m14[0m

[0m[1mTS2304 [0m[ERROR]: Cannot find name 'Result'.
    return Result.ok(config);
[0m[31m           ~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/config/success_test.ts[0m:[0m[33m191[0m:[0m[33m12[0m

[0m[1mTS18046 [0m[ERROR]: 'validatedConfig' is of type 'unknown'.
  assert("working_dir" in validatedConfig, "Should have working_dir");
[0m[31m                          ~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/config/success_test.ts[0m:[0m[33m197[0m:[0m[33m27[0m

[0m[1mTS2304 [0m[ERROR]: Cannot find name 'Result'.
  const nestedResult = Result.flatMap(configResult, (config) => {
[0m[31m                       ~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/config/success_test.ts[0m:[0m[33m207[0m:[0m[33m24[0m

[0m[1mTS7006 [0m[ERROR]: Parameter 'config' implicitly has an 'any' type.
  const nestedResult = Result.flatMap(configResult, (config) => {
[0m[31m                                                     ~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/config/success_test.ts[0m:[0m[33m207[0m:[0m[33m54[0m

[0m[1mTS2304 [0m[ERROR]: Cannot find name 'Result'.
      return Result.ok(config.app_prompt);
[0m[31m             ~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/config/success_test.ts[0m:[0m[33m209[0m:[0m[33m14[0m

[0m[1mTS2304 [0m[ERROR]: Cannot find name 'Result'.
    return Result.err({
[0m[31m           ~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/config/success_test.ts[0m:[0m[33m211[0m:[0m[33m12[0m

[0m[1mTS2304 [0m[ERROR]: Cannot find name 'Result'.
  const mergedResult = Result.map(appConfigResult, (appConfig) => ({
[0m[31m                       ~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/config/success_test.ts[0m:[0m[33m237[0m:[0m[33m24[0m

[0m[1mTS7006 [0m[ERROR]: Parameter 'appConfig' implicitly has an 'any' type.
  const mergedResult = Result.map(appConfigResult, (appConfig) => ({
[0m[31m                                                    ~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/config/success_test.ts[0m:[0m[33m237[0m:[0m[33m53[0m

[0m[1mTS18046 [0m[ERROR]: 'mergedConfig' is of type 'unknown'.
  assertEquals(mergedConfig.app_prompt.base_dir, "custom-prompt-dir", "Should use user override");
[0m[31m               ~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/config/success_test.ts[0m:[0m[33m248[0m:[0m[33m16[0m

[0m[1mTS18046 [0m[ERROR]: 'mergedConfig' is of type 'unknown'.
  assertEquals(mergedConfig.app_prompt.custom_field, "test-value", "Should use user custom field");
[0m[31m               ~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/config/success_test.ts[0m:[0m[33m249[0m:[0m[33m16[0m

[0m[1mTS18046 [0m[ERROR]: 'mergedConfig' is of type 'unknown'.
  assert(mergedConfig.working_dir !== undefined, "Should preserve working_dir");
[0m[31m         ~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/config/success_test.ts[0m:[0m[33m252[0m:[0m[33m10[0m

[0m[1mTS18046 [0m[ERROR]: 'mergedConfig' is of type 'unknown'.
  assert(mergedConfig.app_schema !== undefined, "Should preserve app_schema");
[0m[31m         ~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/config/success_test.ts[0m:[0m[33m253[0m:[0m[33m10[0m

[0m[1mTS2304 [0m[ERROR]: Cannot find name 'Result'.
  const processedResult = await Result.fromPromise(asyncConfigProcessor(config));
[0m[31m                                ~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/config/success_test.ts[0m:[0m[33m272[0m:[0m[33m33[0m

[0m[1mTS18046 [0m[ERROR]: 'processedConfig' is of type 'unknown'.
  assertEquals(processedConfig.processed, true, "Should mark as processed");
[0m[31m               ~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/config/success_test.ts[0m:[0m[33m279[0m:[0m[33m16[0m

[0m[1mTS18046 [0m[ERROR]: 'processedConfig' is of type 'unknown'.
  assert(processedConfig.processedAt !== undefined, "Should have processed timestamp");
[0m[31m         ~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/config/success_test.ts[0m:[0m[33m280[0m:[0m[33m10[0m

[0m[1mTS18046 [0m[ERROR]: 'processedConfig' is of type 'unknown'.
  assert(processedConfig.working_dir !== undefined, "Should preserve original properties");
[0m[31m         ~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/config/success_test.ts[0m:[0m[33m281[0m:[0m[33m10[0m

[0m[1mTS2353 [0m[ERROR]: Object literal may only specify known properties, and 'message' does not exist in type 'ValidationViolation'.
            { field: "value", message: "Value must be positive", value: config.value },
[0m[31m                              ~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/error_handling_patterns_test.ts[0m:[0m[33m55[0m:[0m[33m31[0m

[0m[1mTS2345 [0m[ERROR]: Argument of type '{ field: string; message: string; value: null; }[]' is not assignable to parameter of type 'ValidationViolation[]'.
  Type '{ field: string; message: string; value: null; }' is missing the following properties from type 'ValidationViolation': expectedType, actualType
          return Result.err(ErrorFactories.configValidationError("config.yaml", violations));
[0m[31m                                                                                ~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/error_propagation_patterns_test.ts[0m:[0m[33m155[0m:[0m[33m81[0m

[0m[1mTS2353 [0m[ERROR]: Object literal may only specify known properties, and 'message' does not exist in type 'ValidationViolation'.
            { field: "step1", message: "Step1 marker missing", value: input.step1 },
[0m[31m                              ~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/error_propagation_patterns_test.ts[0m:[0m[33m439[0m:[0m[33m31[0m

[0m[1mTS2353 [0m[ERROR]: Object literal may only specify known properties, and 'message' does not exist in type 'ValidationViolation'.
              message: "Missing parsed content",
[0m[31m              ~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/error_propagation_patterns_test.ts[0m:[0m[33m500[0m:[0m[33m15[0m

[0m[1mTS2345 [0m[ERROR]: Argument of type '(content: string) => Failure<ConfigParseError> | Success<{ parsed_content: string; }>' is not assignable to parameter of type '(data: string) => Result<{ parsed_content: string; }, ConfigFileNotFoundError>'.
  Type 'Failure<ConfigParseError> | Success<{ parsed_content: string; }>' is not assignable to type 'Result<{ parsed_content: string; }, ConfigFileNotFoundError>'.
    Type 'Failure<ConfigParseError>' is not assignable to type 'Result<{ parsed_content: string; }, ConfigFileNotFoundError>'.
      Type 'Failure<ConfigParseError>' is not assignable to type 'Failure<ConfigFileNotFoundError>'.
        Property 'configType' is missing in type 'ConfigParseError' but required in type 'ConfigFileNotFoundError'.
            Result.flatMap(fsLayer(path), parserLayer),
[0m[31m                                          ~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/error_propagation_patterns_test.ts[0m:[0m[33m522[0m:[0m[33m43[0m

    'configType' is declared here.
      readonly configType: "app" | "user";
    [0m[36m           ~~~~~~~~~~[0m
        at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_errors.ts[0m:[0m[33m23[0m:[0m[33m12[0m

[0m[1mTS2345 [0m[ERROR]: Argument of type '(data: Record<string, unknown>) => Failure<ConfigValidationError> | Success<{ validated: boolean; }>' is not assignable to parameter of type '(data: { parsed_content: string; }) => Result<{ validated: boolean; }, ConfigFileNotFoundError>'.
  Type 'Failure<ConfigValidationError> | Success<{ validated: boolean; }>' is not assignable to type 'Result<{ validated: boolean; }, ConfigFileNotFoundError>'.
    Type 'Failure<ConfigValidationError>' is not assignable to type 'Result<{ validated: boolean; }, ConfigFileNotFoundError>'.
      Type 'Failure<ConfigValidationError>' is not assignable to type 'Failure<ConfigFileNotFoundError>'.
        Property 'configType' is missing in type 'ConfigValidationError' but required in type 'ConfigFileNotFoundError'.
            validationLayer,
[0m[31m            ~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/error_propagation_patterns_test.ts[0m:[0m[33m523[0m:[0m[33m13[0m

    'configType' is declared here.
      readonly configType: "app" | "user";
    [0m[36m           ~~~~~~~~~~[0m
        at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/errors/unified_errors.ts[0m:[0m[33m23[0m:[0m[33m12[0m

[0m[1mTS2345 [0m[ERROR]: Argument of type '(data: Record<string, unknown>) => Success<string> | Failure<UnknownError>' is not assignable to parameter of type '(data: { validated: boolean; }) => Result<string, ConfigFileNotFoundError>'.
  Type 'Success<string> | Failure<UnknownError>' is not assignable to type 'Result<string, ConfigFileNotFoundError>'.
    Type 'Failure<UnknownError>' is not assignable to type 'Result<string, ConfigFileNotFoundError>'.
      Type 'Failure<UnknownError>' is not assignable to type 'Failure<ConfigFileNotFoundError>'.
        Type 'UnknownError' is missing the following properties from type 'ConfigFileNotFoundError': path, configType
          businessLayer,
[0m[31m          ~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/error_propagation_patterns_test.ts[0m:[0m[33m525[0m:[0m[33m11[0m

[0m[1mTS2353 [0m[ERROR]: Object literal may only specify known properties, and 'message' does not exist in type 'ValidationViolation'.
                { field: "working_dir", message: "Required", value: null },
[0m[31m                                        ~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/error_recovery_patterns_test.ts[0m:[0m[33m205[0m:[0m[33m41[0m

[0m[1mTS1308 [0m[ERROR]: 'await' expressions are only allowed within async functions and at the top levels of modules.
        const result = await circuitBreaker.execute(flakyOperation);
[0m[31m                       ~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/error_recovery_patterns_test.ts[0m:[0m[33m579[0m:[0m[33m24[0m

[0m[1mTS1356 [0m[ERROR]:     Did you mean to mark this function as 'async'?
        it("should implement circuit breaker pattern for error recovery", () => {
    [0m[31m                                                                      ~~~~~~~[0m
        at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/error_recovery_patterns_test.ts[0m:[0m[33m508[0m:[0m[33m71[0m

[0m[1mTS1308 [0m[ERROR]: 'await' expressions are only allowed within async functions and at the top levels of modules.
      const rejectedResult = await circuitBreaker.execute(flakyOperation);
[0m[31m                             ~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/error_recovery_patterns_test.ts[0m:[0m[33m586[0m:[0m[33m30[0m

[0m[1mTS1356 [0m[ERROR]:     Did you mean to mark this function as 'async'?
        it("should implement circuit breaker pattern for error recovery", () => {
    [0m[31m                                                                      ~~~~~~~[0m
        at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/error_recovery_patterns_test.ts[0m:[0m[33m508[0m:[0m[33m71[0m

[0m[1mTS1308 [0m[ERROR]: 'await' expressions are only allowed within async functions and at the top levels of modules.
      await new Promise((resolve) => setTimeout(resolve, 1100));
[0m[31m      ~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/error_recovery_patterns_test.ts[0m:[0m[33m591[0m:[0m[33m7[0m

[0m[1mTS1356 [0m[ERROR]:     Did you mean to mark this function as 'async'?
        it("should implement circuit breaker pattern for error recovery", () => {
    [0m[31m                                                                      ~~~~~~~[0m
        at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/error_recovery_patterns_test.ts[0m:[0m[33m508[0m:[0m[33m71[0m

[0m[1mTS1308 [0m[ERROR]: 'await' expressions are only allowed within async functions and at the top levels of modules.
      const halfOpenResult = await circuitBreaker.execute(flakyOperation);
[0m[31m                             ~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/error_recovery_patterns_test.ts[0m:[0m[33m592[0m:[0m[33m30[0m

[0m[1mTS1356 [0m[ERROR]:     Did you mean to mark this function as 'async'?
        it("should implement circuit breaker pattern for error recovery", () => {
    [0m[31m                                                                      ~~~~~~~[0m
        at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/error_recovery_patterns_test.ts[0m:[0m[33m508[0m:[0m[33m71[0m

[0m[1mTS2353 [0m[ERROR]: Object literal may only specify known properties, and 'message' does not exist in type 'ValidationViolation'.
          { field: "test", message: "Invalid", value: null },
[0m[31m                           ~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/error_recovery_patterns_test.ts[0m:[0m[33m649[0m:[0m[33m28[0m

[0m[1mTS2339 [0m[ERROR]: Property 'violations' does not exist on type 'UnifiedError'.
  Property 'violations' does not exist on type 'ConfigFileNotFoundError'.
        error.violations.some((v) => v.field === "working_dir"),
[0m[31m              ~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/error_handling_integration_test.ts[0m:[0m[33m98[0m:[0m[33m15[0m

[0m[1mTS7006 [0m[ERROR]: Parameter 'v' implicitly has an 'any' type.
        error.violations.some((v) => v.field === "working_dir"),
[0m[31m                               ^[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/error_handling_integration_test.ts[0m:[0m[33m98[0m:[0m[33m32[0m

[0m[1mTS2339 [0m[ERROR]: Property 'violations' does not exist on type 'UnifiedError'.
  Property 'violations' does not exist on type 'ConfigFileNotFoundError'.
        error.violations.length >= 2,
[0m[31m              ~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/error_handling_integration_test.ts[0m:[0m[33m117[0m:[0m[33m15[0m

[0m[1mTS2339 [0m[ERROR]: Property 'violations' does not exist on type 'UnifiedError'.
  Property 'violations' does not exist on type 'ConfigFileNotFoundError'.
        `Should have multiple violations, got ${error.violations.length}`,
[0m[31m                                                      ~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/error_handling_integration_test.ts[0m:[0m[33m118[0m:[0m[33m55[0m

[0m[1mTS2339 [0m[ERROR]: Property 'path' does not exist on type 'UnifiedError'.
  Property 'path' does not exist on type 'ConfigNotLoadedError'.
        error.path.includes("app.yml"),
[0m[31m              ~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/error_handling_integration_test.ts[0m:[0m[33m138[0m:[0m[33m15[0m

[0m[1mTS2339 [0m[ERROR]: Property 'context' does not exist on type 'UnifiedError'.
  Property 'context' does not exist on type 'ConfigFileNotFoundError'.
      assert(error.context !== undefined, "Error should have context");
[0m[31m                   ~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/error_handling_integration_test.ts[0m:[0m[33m195[0m:[0m[33m20[0m

[0m[1mTS2554 [0m[ERROR]: Expected 2 arguments, but got 1.
      configManager = new ConfigManager({ configRoot: tempDir });
[0m[31m                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/error_handling_integration_test.ts[0m:[0m[33m209[0m:[0m[33m23[0m

    An argument for 'userConfigLoader' was not provided.
        private readonly userConfigLoader: UserConfigLoader,
    [0m[36m    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
        at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/config_manager.ts[0m:[0m[33m41[0m:[0m[33m5[0m

[0m[1mTS2339 [0m[ERROR]: Property 'load' does not exist on type 'ConfigManager'.
      const firstResult = await configManager.load();
[0m[31m                                              ~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/error_handling_integration_test.ts[0m:[0m[33m212[0m:[0m[33m47[0m

[0m[1mTS2339 [0m[ERROR]: Property 'reload' does not exist on type 'ConfigManager'.
      const secondResult = await configManager.reload();
[0m[31m                                               ~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/error_handling_integration_test.ts[0m:[0m[33m219[0m:[0m[33m48[0m

[0m[1mTS2552 [0m[ERROR]: Cannot find name 'assertUnifiedResultOk'. Did you mean 'assertUnifiedResultErr'?
      const config = assertUnifiedResultOk(secondResult, "Second load should succeed after fix");
[0m[31m                     ~~~~~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/error_handling_integration_test.ts[0m:[0m[33m222[0m:[0m[33m22[0m

[0m[1mTS2305 [0m[ERROR]: Module '"file:///Users/tettuan/github/breakdownconfig/src/types/unified_result.ts"' has no exported member 'UnifiedResult'.
import { UnifiedResult } from "../../src/types/unified_result.ts";
[0m[31m         ~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/happy_path_integration_test.ts[0m:[0m[33m18[0m:[0m[33m10[0m

[0m[1mTS2554 [0m[ERROR]: Expected 2 arguments, but got 1.
    configManager = new ConfigManager({ configRoot: tempDir });
[0m[31m                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/happy_path_integration_test.ts[0m:[0m[33m26[0m:[0m[33m21[0m

    An argument for 'userConfigLoader' was not provided.
        private readonly userConfigLoader: UserConfigLoader,
    [0m[36m    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
        at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/config_manager.ts[0m:[0m[33m41[0m:[0m[33m5[0m

[0m[1mTS2339 [0m[ERROR]: Property 'load' does not exist on type 'ConfigManager'.
      const result = await configManager.load();
[0m[31m                                         ~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/happy_path_integration_test.ts[0m:[0m[33m36[0m:[0m[33m42[0m

[0m[1mTS18046 [0m[ERROR]: 'config' is of type 'unknown'.
      assertEquals(config.working_dir, ".agent/breakdown");
[0m[31m                   ~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/happy_path_integration_test.ts[0m:[0m[33m42[0m:[0m[33m20[0m

[0m[1mTS18046 [0m[ERROR]: 'config' is of type 'unknown'.
      assertEquals(config.app_prompt.base_dir, "prompts");
[0m[31m                   ~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/happy_path_integration_test.ts[0m:[0m[33m43[0m:[0m[33m20[0m

[0m[1mTS18046 [0m[ERROR]: 'config' is of type 'unknown'.
      assertEquals(config.app_schema.base_dir, "schemas");
[0m[31m                   ~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/happy_path_integration_test.ts[0m:[0m[33m44[0m:[0m[33m20[0m

[0m[1mTS2339 [0m[ERROR]: Property 'load' does not exist on type 'ConfigManager'.
      const result = await configManager.load();
[0m[31m                                         ~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/happy_path_integration_test.ts[0m:[0m[33m49[0m:[0m[33m42[0m

[0m[1mTS18046 [0m[ERROR]: 'config' is of type 'unknown'.
        config.app_prompt.base_dir,
[0m[31m        ~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/happy_path_integration_test.ts[0m:[0m[33m56[0m:[0m[33m9[0m

[0m[1mTS18046 [0m[ERROR]: 'config' is of type 'unknown'.
        config.app_schema.base_dir,
[0m[31m        ~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/happy_path_integration_test.ts[0m:[0m[33m63[0m:[0m[33m9[0m

[0m[1mTS2339 [0m[ERROR]: Property 'load' does not exist on type 'ConfigManager'.
      const result = await configManager.load();
[0m[31m                                         ~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/happy_path_integration_test.ts[0m:[0m[33m71[0m:[0m[33m42[0m

[0m[1mTS18046 [0m[ERROR]: 'config' is of type 'unknown'.
        !config.working_dir.includes(".."),
[0m[31m         ~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/happy_path_integration_test.ts[0m:[0m[33m78[0m:[0m[33m10[0m

[0m[1mTS18046 [0m[ERROR]: 'config' is of type 'unknown'.
        !config.app_prompt.base_dir.includes(".."),
[0m[31m         ~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/happy_path_integration_test.ts[0m:[0m[33m82[0m:[0m[33m10[0m

[0m[1mTS18046 [0m[ERROR]: 'config' is of type 'unknown'.
        !config.app_schema.base_dir.includes(".."),
[0m[31m         ~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/happy_path_integration_test.ts[0m:[0m[33m86[0m:[0m[33m10[0m

[0m[1mTS2339 [0m[ERROR]: Property 'load' does not exist on type 'ConfigManager'.
      const firstResult = await configManager.load();
[0m[31m                                              ~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/happy_path_integration_test.ts[0m:[0m[33m95[0m:[0m[33m47[0m

[0m[1mTS2339 [0m[ERROR]: Property 'load' does not exist on type 'ConfigManager'.
      const secondResult = await configManager.load();
[0m[31m                                               ~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/happy_path_integration_test.ts[0m:[0m[33m99[0m:[0m[33m48[0m

[0m[1mTS18046 [0m[ERROR]: 'firstConfig' is of type 'unknown'.
        firstConfig.working_dir,
[0m[31m        ~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/happy_path_integration_test.ts[0m:[0m[33m104[0m:[0m[33m9[0m

[0m[1mTS18046 [0m[ERROR]: 'secondConfig' is of type 'unknown'.
        secondConfig.working_dir,
[0m[31m        ~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/happy_path_integration_test.ts[0m:[0m[33m105[0m:[0m[33m9[0m

[0m[1mTS18046 [0m[ERROR]: 'firstConfig' is of type 'unknown'.
        firstConfig.app_prompt.base_dir,
[0m[31m        ~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/happy_path_integration_test.ts[0m:[0m[33m109[0m:[0m[33m9[0m

[0m[1mTS18046 [0m[ERROR]: 'secondConfig' is of type 'unknown'.
        secondConfig.app_prompt.base_dir,
[0m[31m        ~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/happy_path_integration_test.ts[0m:[0m[33m110[0m:[0m[33m9[0m

[0m[1mTS2339 [0m[ERROR]: Property 'load' does not exist on type 'ConfigManager'.
      const initialResult = await configManager.load();
[0m[31m                                                ~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/happy_path_integration_test.ts[0m:[0m[33m117[0m:[0m[33m49[0m

[0m[1mTS2339 [0m[ERROR]: Property 'reload' does not exist on type 'ConfigManager'.
      const reloadResult = await configManager.reload();
[0m[31m                                               ~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/happy_path_integration_test.ts[0m:[0m[33m121[0m:[0m[33m48[0m

[0m[1mTS18046 [0m[ERROR]: 'reloadedConfig' is of type 'unknown'.
      assertEquals(reloadedConfig.working_dir, ".agent/breakdown");
[0m[31m                   ~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/happy_path_integration_test.ts[0m:[0m[33m130[0m:[0m[33m20[0m

[0m[1mTS2339 [0m[ERROR]: Property 'load' does not exist on type 'ConfigManager'.
      const result = await configManager.load();
[0m[31m                                         ~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/happy_path_integration_test.ts[0m:[0m[33m137[0m:[0m[33m42[0m

[0m[1mTS18046 [0m[ERROR]: 'config' is of type 'unknown'.
        (config) => config.working_dir,
[0m[31m                    ~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/happy_path_integration_test.ts[0m:[0m[33m142[0m:[0m[33m21[0m

[0m[1mTS2339 [0m[ERROR]: Property 'load' does not exist on type 'ConfigManager'.
      const result = await configManager.load();
[0m[31m                                         ~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/happy_path_integration_test.ts[0m:[0m[33m150[0m:[0m[33m42[0m

[0m[1mTS18046 [0m[ERROR]: 'config' is of type 'unknown'.
          if (config.working_dir && config.app_prompt.base_dir && config.app_schema.base_dir) {
[0m[31m              ~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/happy_path_integration_test.ts[0m:[0m[33m157[0m:[0m[33m15[0m

[0m[1mTS18046 [0m[ERROR]: 'config' is of type 'unknown'.
          if (config.working_dir && config.app_prompt.base_dir && config.app_schema.base_dir) {
[0m[31m                                    ~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/happy_path_integration_test.ts[0m:[0m[33m157[0m:[0m[33m37[0m

[0m[1mTS18046 [0m[ERROR]: 'config' is of type 'unknown'.
          if (config.working_dir && config.app_prompt.base_dir && config.app_schema.base_dir) {
[0m[31m                                                                  ~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/happy_path_integration_test.ts[0m:[0m[33m157[0m:[0m[33m67[0m

[0m[1mTS2339 [0m[ERROR]: Property 'load' does not exist on type 'ConfigManager'.
      const result = await configManager.load();
[0m[31m                                         ~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/happy_path_integration_test.ts[0m:[0m[33m181[0m:[0m[33m42[0m

[0m[1mTS2339 [0m[ERROR]: Property 'load' does not exist on type 'ConfigManager'.
      const loadPromises = Array.from({ length: 5 }, () => configManager.load());
[0m[31m                                                                         ~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/happy_path_integration_test.ts[0m:[0m[33m196[0m:[0m[33m74[0m

[0m[1mTS7006 [0m[ERROR]: Parameter 'result' implicitly has an 'any' type.
      results.forEach((result, index) => {
[0m[31m                       ~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/happy_path_integration_test.ts[0m:[0m[33m200[0m:[0m[33m24[0m

[0m[1mTS7006 [0m[ERROR]: Parameter 'index' implicitly has an 'any' type.
      results.forEach((result, index) => {
[0m[31m                               ~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/happy_path_integration_test.ts[0m:[0m[33m200[0m:[0m[33m32[0m

[0m[1mTS7006 [0m[ERROR]: Parameter 'result' implicitly has an 'any' type.
      results.slice(1).forEach((result, index) => {
[0m[31m                                ~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/happy_path_integration_test.ts[0m:[0m[33m206[0m:[0m[33m33[0m

[0m[1mTS7006 [0m[ERROR]: Parameter 'index' implicitly has an 'any' type.
      results.slice(1).forEach((result, index) => {
[0m[31m                                        ~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/happy_path_integration_test.ts[0m:[0m[33m206[0m:[0m[33m41[0m

[0m[1mTS18046 [0m[ERROR]: 'config' is of type 'unknown'.
          config.working_dir,
[0m[31m          ~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/happy_path_integration_test.ts[0m:[0m[33m209[0m:[0m[33m11[0m

[0m[1mTS18046 [0m[ERROR]: 'firstConfig' is of type 'unknown'.
          firstConfig.working_dir,
[0m[31m          ~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/happy_path_integration_test.ts[0m:[0m[33m210[0m:[0m[33m11[0m

[0m[1mTS2724 [0m[ERROR]: '"file:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts"' has no exported member named 'ConfigValidationError'. Did you mean 'ValidationError'?
  ConfigValidationError,
[0m[31m  ~~~~~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/phase4_type_system_integration_test.ts[0m:[0m[33m17[0m:[0m[33m3[0m

[0m[1mTS2724 [0m[ERROR]: '"file:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts"' has no exported member named 'PathValidationError'. Did you mean 'ValidationError'?
  PathValidationError,
[0m[31m  ~~~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/phase4_type_system_integration_test.ts[0m:[0m[33m18[0m:[0m[33m3[0m

[0m[1mTS2305 [0m[ERROR]: Module '"file:///Users/tettuan/github/breakdownconfig/src/errors/unified_error_final_exports.ts"' has no exported member 'ErrorVisitor'.
  ErrorVisitor,
[0m[31m  ~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/phase4_type_system_integration_test.ts[0m:[0m[33m35[0m:[0m[33m3[0m

[0m[1mTS2345 [0m[ERROR]: Argument of type 'typeof AbstractError' is not assignable to parameter of type 'AnyConstructor'.
  Cannot assign an abstract constructor type to a non-abstract constructor type.
        assertInstanceOf(error, AbstractError, "All errors should extend AbstractError");
[0m[31m                                ~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/phase4_type_system_integration_test.ts[0m:[0m[33m123[0m:[0m[33m33[0m

[0m[1mTS2345 [0m[ERROR]: Argument of type 'typeof AbstractError' is not assignable to parameter of type 'AnyConstructor'.
  Cannot assign an abstract constructor type to a non-abstract constructor type.
      assertInstanceOf(configError, AbstractError);
[0m[31m                                    ~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/phase4_type_system_integration_test.ts[0m:[0m[33m139[0m:[0m[33m37[0m

[0m[1mTS2345 [0m[ERROR]: Argument of type 'typeof AbstractError' is not assignable to parameter of type 'AnyConstructor'.
  Cannot assign an abstract constructor type to a non-abstract constructor type.
      assertInstanceOf(validationError, AbstractError);
[0m[31m                                        ~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/phase4_type_system_integration_test.ts[0m:[0m[33m142[0m:[0m[33m41[0m

[0m[1mTS2345 [0m[ERROR]: Argument of type 'typeof AbstractError' is not assignable to parameter of type 'AnyConstructor'.
  Cannot assign an abstract constructor type to a non-abstract constructor type.
      assertInstanceOf(securityError, AbstractError);
[0m[31m                                      ~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/phase4_type_system_integration_test.ts[0m:[0m[33m145[0m:[0m[33m39[0m

[0m[1mTS7006 [0m[ERROR]: Parameter 'error' implicitly has an 'any' type.
        visitConfigFileNotFound: (error) => {
[0m[31m                                  ~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/phase4_type_system_integration_test.ts[0m:[0m[33m163[0m:[0m[33m35[0m

[0m[1mTS7006 [0m[ERROR]: Parameter 'error' implicitly has an 'any' type.
        visitConfigParseError: (error) => {
[0m[31m                                ~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/phase4_type_system_integration_test.ts[0m:[0m[33m166[0m:[0m[33m33[0m

[0m[1mTS7006 [0m[ERROR]: Parameter 'error' implicitly has an 'any' type.
        visitRequiredFieldMissing: (error) => {
[0m[31m                                    ~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/phase4_type_system_integration_test.ts[0m:[0m[33m169[0m:[0m[33m37[0m

[0m[1mTS7006 [0m[ERROR]: Parameter 'error' implicitly has an 'any' type.
        visitTypeMismatch: (error) => {
[0m[31m                            ~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/phase4_type_system_integration_test.ts[0m:[0m[33m172[0m:[0m[33m29[0m

[0m[1mTS7006 [0m[ERROR]: Parameter 'error' implicitly has an 'any' type.
        visitPathTraversal: (error) => {
[0m[31m                             ~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/phase4_type_system_integration_test.ts[0m:[0m[33m175[0m:[0m[33m30[0m

[0m[1mTS7006 [0m[ERROR]: Parameter 'error' implicitly has an 'any' type.
        visitUnknownError: (error) => {
[0m[31m                            ~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/phase4_type_system_integration_test.ts[0m:[0m[33m178[0m:[0m[33m29[0m

[0m[1mTS7006 [0m[ERROR]: Parameter 'error' implicitly has an 'any' type.
        visitDefault: (error) => {
[0m[31m                       ~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/phase4_type_system_integration_test.ts[0m:[0m[33m181[0m:[0m[33m24[0m

[0m[1mTS18048 [0m[ERROR]: 'metadata.recoverySuggestions.length' is possibly 'undefined'.
      assert(metadata?.recoverySuggestions?.length > 0, "Should have recovery suggestions");
[0m[31m             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/phase4_type_system_integration_test.ts[0m:[0m[33m209[0m:[0m[33m14[0m

[0m[1mTS2304 [0m[ERROR]: Cannot find name 'ErrorDiagnostics'.
      const report = ErrorDiagnostics.generateReport();
[0m[31m                     ~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/phase4_type_system_integration_test.ts[0m:[0m[33m315[0m:[0m[33m22[0m

[0m[1mTS2304 [0m[ERROR]: Cannot find name 'ErrorDiagnostics'.
      const health = ErrorDiagnostics.checkSystemHealth();
[0m[31m                     ~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/phase4_type_system_integration_test.ts[0m:[0m[33m336[0m:[0m[33m22[0m

[0m[1mTS2554 [0m[ERROR]: Expected 2 arguments, but got 0.
      const configManager = new ConfigManager();
[0m[31m                            ~~~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/phase4_type_system_integration_test.ts[0m:[0m[33m346[0m:[0m[33m29[0m

    An argument for 'appConfigLoader' was not provided.
        private readonly appConfigLoader: AppConfigLoader,
    [0m[36m    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
        at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/config_manager.ts[0m:[0m[33m40[0m:[0m[33m5[0m

[0m[1mTS2339 [0m[ERROR]: Property 'load' does not exist on type 'ConfigManager'.
      const result = await configManager.load();
[0m[31m                                         ~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/phase4_type_system_integration_test.ts[0m:[0m[33m349[0m:[0m[33m42[0m

[0m[1mTS2339 [0m[ERROR]: Property 'success' does not exist on type '{ ok<T>(data: T): Success<T>; err<E = UnifiedError>(error: E): Failure<E>; isOk<T, E>(result: Result<T, E>): result is Success<T>; ... 7 more ...; fromPromise<T>(promise: Promise<...>, errorMapper?: ((error: unknown) => UnifiedError) | undefined): Promise<...>; }'.
        const validation = Result.success(config)
[0m[31m                                  ~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/phase4_type_system_integration_test.ts[0m:[0m[33m355[0m:[0m[33m35[0m

[0m[1mTS7006 [0m[ERROR]: Parameter 'cfg' implicitly has an 'any' type.
          .flatMap(cfg => {
[0m[31m                   ~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/phase4_type_system_integration_test.ts[0m:[0m[33m356[0m:[0m[33m20[0m

[0m[1mTS2339 [0m[ERROR]: Property 'failure' does not exist on type '{ ok<T>(data: T): Success<T>; err<E = UnifiedError>(error: E): Failure<E>; isOk<T, E>(result: Result<T, E>): result is Success<T>; ... 7 more ...; fromPromise<T>(promise: Promise<...>, errorMapper?: ((error: unknown) => UnifiedError) | undefined): Promise<...>; }'.
              return Result.failure(
[0m[31m                            ~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/phase4_type_system_integration_test.ts[0m:[0m[33m358[0m:[0m[33m29[0m

[0m[1mTS2339 [0m[ERROR]: Property 'success' does not exist on type '{ ok<T>(data: T): Success<T>; err<E = UnifiedError>(error: E): Failure<E>; isOk<T, E>(result: Result<T, E>): result is Success<T>; ... 7 more ...; fromPromise<T>(promise: Promise<...>, errorMapper?: ((error: unknown) => UnifiedError) | undefined): Promise<...>; }'.
            return Result.success(cfg);
[0m[31m                          ~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/phase4_type_system_integration_test.ts[0m:[0m[33m362[0m:[0m[33m27[0m

[0m[1mTS7006 [0m[ERROR]: Parameter 'cfg' implicitly has an 'any' type.
          .flatMap(cfg => {
[0m[31m                   ~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/phase4_type_system_integration_test.ts[0m:[0m[33m364[0m:[0m[33m20[0m

[0m[1mTS2339 [0m[ERROR]: Property 'failure' does not exist on type '{ ok<T>(data: T): Success<T>; err<E = UnifiedError>(error: E): Failure<E>; isOk<T, E>(result: Result<T, E>): result is Success<T>; ... 7 more ...; fromPromise<T>(promise: Promise<...>, errorMapper?: ((error: unknown) => UnifiedError) | undefined): Promise<...>; }'.
              return Result.failure(
[0m[31m                            ~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/phase4_type_system_integration_test.ts[0m:[0m[33m366[0m:[0m[33m29[0m

[0m[1mTS2339 [0m[ERROR]: Property 'success' does not exist on type '{ ok<T>(data: T): Success<T>; err<E = UnifiedError>(error: E): Failure<E>; isOk<T, E>(result: Result<T, E>): result is Success<T>; ... 7 more ...; fromPromise<T>(promise: Promise<...>, errorMapper?: ((error: unknown) => UnifiedError) | undefined): Promise<...>; }'.
            return Result.success(cfg);
[0m[31m                          ~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/phase4_type_system_integration_test.ts[0m:[0m[33m374[0m:[0m[33m27[0m

[0m[1mTS2339 [0m[ERROR]: Property 'failure' does not exist on type '{ ok<T>(data: T): Success<T>; err<E = UnifiedError>(error: E): Failure<E>; isOk<T, E>(result: Result<T, E>): result is Success<T>; ... 7 more ...; fromPromise<T>(promise: Promise<...>, errorMapper?: ((error: unknown) => UnifiedError) | undefined): Promise<...>; }'.
      const result = Result.failure<any, BaseErrorInterface>(originalError)
[0m[31m                            ~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/phase4_type_system_integration_test.ts[0m:[0m[33m413[0m:[0m[33m29[0m

[0m[1mTS7006 [0m[ERROR]: Parameter 'err' implicitly has an 'any' type.
        .mapErr(err => {
[0m[31m                ~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/phase4_type_system_integration_test.ts[0m:[0m[33m414[0m:[0m[33m17[0m

[0m[1mTS2339 [0m[ERROR]: Property 'success' does not exist on type '{ ok<T>(data: T): Success<T>; err<E = UnifiedError>(error: E): Failure<E>; isOk<T, E>(result: Result<T, E>): result is Success<T>; ... 7 more ...; fromPromise<T>(promise: Promise<...>, errorMapper?: ((error: unknown) => UnifiedError) | undefined): Promise<...>; }'.
      let result: Result<number, UnifiedError> = Result.success(1);
[0m[31m                                                        ~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/result_type_performance_test.ts[0m:[0m[33m24[0m:[0m[33m57[0m

[0m[1mTS2339 [0m[ERROR]: Property 'map' does not exist on type 'Result<number, UnifiedError>'.
  Property 'map' does not exist on type 'Failure<UnifiedError>'.
        result = result.map(n => n + 1);
[0m[31m                        ~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/result_type_performance_test.ts[0m:[0m[33m30[0m:[0m[33m25[0m

[0m[1mTS7006 [0m[ERROR]: Parameter 'n' implicitly has an 'any' type.
        result = result.map(n => n + 1);
[0m[31m                            ^[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/result_type_performance_test.ts[0m:[0m[33m30[0m:[0m[33m29[0m

[0m[1mTS2339 [0m[ERROR]: Property 'unwrapOr' does not exist on type 'Result<number, UnifiedError>'.
  Property 'unwrapOr' does not exist on type 'Failure<UnifiedError>'.
      const finalValue = result.unwrapOr(0);
[0m[31m                                ~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/result_type_performance_test.ts[0m:[0m[33m34[0m:[0m[33m33[0m

[0m[1mTS2339 [0m[ERROR]: Property 'success' does not exist on type '{ ok<T>(data: T): Success<T>; err<E = UnifiedError>(error: E): Failure<E>; isOk<T, E>(result: Result<T, E>): result is Success<T>; ... 7 more ...; fromPromise<T>(promise: Promise<...>, errorMapper?: ((error: unknown) => UnifiedError) | undefined): Promise<...>; }'.
          Result.success(i)
[0m[31m                 ~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/result_type_performance_test.ts[0m:[0m[33m52[0m:[0m[33m18[0m

[0m[1mTS7006 [0m[ERROR]: Parameter 'n' implicitly has an 'any' type.
            .map(n => n * 2)
[0m[31m                 ^[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/result_type_performance_test.ts[0m:[0m[33m53[0m:[0m[33m18[0m

[0m[1mTS7006 [0m[ERROR]: Parameter 'n' implicitly has an 'any' type.
            .flatMap(n => n % 2 === 0 ? Result.success(n) : Result.failure(
[0m[31m                     ^[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/result_type_performance_test.ts[0m:[0m[33m54[0m:[0m[33m22[0m

[0m[1mTS2339 [0m[ERROR]: Property 'success' does not exist on type '{ ok<T>(data: T): Success<T>; err<E = UnifiedError>(error: E): Failure<E>; isOk<T, E>(result: Result<T, E>): result is Success<T>; ... 7 more ...; fromPromise<T>(promise: Promise<...>, errorMapper?: ((error: unknown) => UnifiedError) | undefined): Promise<...>; }'.
            .flatMap(n => n % 2 === 0 ? Result.success(n) : Result.failure(
[0m[31m                                               ~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/result_type_performance_test.ts[0m:[0m[33m54[0m:[0m[33m48[0m

[0m[1mTS2339 [0m[ERROR]: Property 'failure' does not exist on type '{ ok<T>(data: T): Success<T>; err<E = UnifiedError>(error: E): Failure<E>; isOk<T, E>(result: Result<T, E>): result is Success<T>; ... 7 more ...; fromPromise<T>(promise: Promise<...>, errorMapper?: ((error: unknown) => UnifiedError) | undefined): Promise<...>; }'.
            .flatMap(n => n % 2 === 0 ? Result.success(n) : Result.failure(
[0m[31m                                                                   ~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/result_type_performance_test.ts[0m:[0m[33m54[0m:[0m[33m68[0m

[0m[1mTS2339 [0m[ERROR]: Property 'isOk' does not exist on type 'Result<number, UnifiedError>'.
  Property 'isOk' does not exist on type 'Failure<UnifiedError>'.
      const successes = results.filter(r => r.isOk()).length;
[0m[31m                                              ~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/result_type_performance_test.ts[0m:[0m[33m61[0m:[0m[33m47[0m

[0m[1mTS2339 [0m[ERROR]: Property 'success' does not exist on type '{ ok<T>(data: T): Success<T>; err<E = UnifiedError>(error: E): Failure<E>; isOk<T, E>(result: Result<T, E>): result is Success<T>; ... 7 more ...; fromPromise<T>(promise: Promise<...>, errorMapper?: ((error: unknown) => UnifiedError) | undefined): Promise<...>; }'.
      const result = Result.success<number, UnifiedError>(0)
[0m[31m                            ~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/result_type_performance_test.ts[0m:[0m[33m79[0m:[0m[33m29[0m

[0m[1mTS7006 [0m[ERROR]: Parameter 'n' implicitly has an 'any' type.
        .flatMap(n => {
[0m[31m                 ^[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/result_type_performance_test.ts[0m:[0m[33m80[0m:[0m[33m18[0m

[0m[1mTS2339 [0m[ERROR]: Property 'failure' does not exist on type '{ ok<T>(data: T): Success<T>; err<E = UnifiedError>(error: E): Failure<E>; isOk<T, E>(result: Result<T, E>): result is Success<T>; ... 7 more ...; fromPromise<T>(promise: Promise<...>, errorMapper?: ((error: unknown) => UnifiedError) | undefined): Promise<...>; }'.
          return Result.failure(ErrorFactories.configNotLoaded('test'));
[0m[31m                        ~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/result_type_performance_test.ts[0m:[0m[33m82[0m:[0m[33m25[0m

[0m[1mTS7006 [0m[ERROR]: Parameter 'n' implicitly has an 'any' type.
        .map(n => {
[0m[31m             ^[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/result_type_performance_test.ts[0m:[0m[33m84[0m:[0m[33m14[0m

[0m[1mTS7006 [0m[ERROR]: Parameter 'n' implicitly has an 'any' type.
        .flatMap(n => {
[0m[31m                 ^[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/result_type_performance_test.ts[0m:[0m[33m89[0m:[0m[33m18[0m

[0m[1mTS2339 [0m[ERROR]: Property 'success' does not exist on type '{ ok<T>(data: T): Success<T>; err<E = UnifiedError>(error: E): Failure<E>; isOk<T, E>(result: Result<T, E>): result is Success<T>; ... 7 more ...; fromPromise<T>(promise: Promise<...>, errorMapper?: ((error: unknown) => UnifiedError) | undefined): Promise<...>; }'.
          return Result.success(n * 2);
[0m[31m                        ~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/result_type_performance_test.ts[0m:[0m[33m92[0m:[0m[33m25[0m

[0m[1mTS2322 [0m[ERROR]: Type 'BaseErrorInterface | undefined' is not assignable to type 'BaseErrorInterface'.
  Type 'undefined' is not assignable to type 'BaseErrorInterface'.
        current = current.cause;
[0m[31m        ~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/result_type_performance_test.ts[0m:[0m[33m135[0m:[0m[33m9[0m

[0m[1mTS2554 [0m[ERROR]: Expected 2 arguments, but got 0.
        const configManager = new ConfigManager();
[0m[31m                              ~~~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/result_type_performance_test.ts[0m:[0m[33m185[0m:[0m[33m31[0m

    An argument for 'appConfigLoader' was not provided.
        private readonly appConfigLoader: AppConfigLoader,
    [0m[36m    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
        at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/config_manager.ts[0m:[0m[33m40[0m:[0m[33m5[0m

[0m[1mTS2339 [0m[ERROR]: Property 'load' does not exist on type 'ConfigManager'.
        const result = await configManager.load();
[0m[31m                                           ~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/result_type_performance_test.ts[0m:[0m[33m189[0m:[0m[33m44[0m

[0m[1mTS7006 [0m[ERROR]: Parameter 'config' implicitly has an 'any' type.
          .map(config => config.working_dir)
[0m[31m               ~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/result_type_performance_test.ts[0m:[0m[33m193[0m:[0m[33m16[0m

[0m[1mTS7006 [0m[ERROR]: Parameter 'dir' implicitly has an 'any' type.
          .flatMap(dir => {
[0m[31m                   ~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/result_type_performance_test.ts[0m:[0m[33m194[0m:[0m[33m20[0m

[0m[1mTS2339 [0m[ERROR]: Property 'failure' does not exist on type '{ ok<T>(data: T): Success<T>; err<E = UnifiedError>(error: E): Failure<E>; isOk<T, E>(result: Result<T, E>): result is Success<T>; ... 7 more ...; fromPromise<T>(promise: Promise<...>, errorMapper?: ((error: unknown) => UnifiedError) | undefined): Promise<...>; }'.
              return Result.failure(
[0m[31m                            ~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/result_type_performance_test.ts[0m:[0m[33m196[0m:[0m[33m29[0m

[0m[1mTS2339 [0m[ERROR]: Property 'success' does not exist on type '{ ok<T>(data: T): Success<T>; err<E = UnifiedError>(error: E): Failure<E>; isOk<T, E>(result: Result<T, E>): result is Success<T>; ... 7 more ...; fromPromise<T>(promise: Promise<...>, errorMapper?: ((error: unknown) => UnifiedError) | undefined): Promise<...>; }'.
            return Result.success(dir);
[0m[31m                          ~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/result_type_performance_test.ts[0m:[0m[33m200[0m:[0m[33m27[0m

[0m[1mTS7006 [0m[ERROR]: Parameter 'dir' implicitly has an 'any' type.
          .map(dir => ({ normalized: dir.replace(/\\/g, '/') }))
[0m[31m               ~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/result_type_performance_test.ts[0m:[0m[33m202[0m:[0m[33m16[0m

[0m[1mTS7006 [0m[ERROR]: Parameter 'err' implicitly has an 'any' type.
          .mapErr(err => {
[0m[31m                  ~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/result_type_performance_test.ts[0m:[0m[33m203[0m:[0m[33m19[0m

[0m[1mTS2554 [0m[ERROR]: Expected 2 arguments, but got 0.
      const configManager = new ConfigManager();
[0m[31m                            ~~~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/result_type_performance_test.ts[0m:[0m[33m231[0m:[0m[33m29[0m

    An argument for 'appConfigLoader' was not provided.
        private readonly appConfigLoader: AppConfigLoader,
    [0m[36m    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
        at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/config_manager.ts[0m:[0m[33m40[0m:[0m[33m5[0m

[0m[1mTS2339 [0m[ERROR]: Property 'load' does not exist on type 'ConfigManager'.
      const loadResult = await configManager.load();
[0m[31m                                             ~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/result_type_performance_test.ts[0m:[0m[33m232[0m:[0m[33m46[0m

[0m[1mTS7006 [0m[ERROR]: Parameter 'config' implicitly has an 'any' type.
        .flatMap(config => {
[0m[31m                 ~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/result_type_performance_test.ts[0m:[0m[33m238[0m:[0m[33m18[0m

[0m[1mTS2339 [0m[ERROR]: Property 'failure' does not exist on type '{ ok<T>(data: T): Success<T>; err<E = UnifiedError>(error: E): Failure<E>; isOk<T, E>(result: Result<T, E>): result is Success<T>; ... 7 more ...; fromPromise<T>(promise: Promise<...>, errorMapper?: ((error: unknown) => UnifiedError) | undefined): Promise<...>; }'.
            return Result.failure<ValidationResult, UnifiedError>(
[0m[31m                          ~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/result_type_performance_test.ts[0m:[0m[33m241[0m:[0m[33m27[0m

[0m[1mTS2339 [0m[ERROR]: Property 'success' does not exist on type '{ ok<T>(data: T): Success<T>; err<E = UnifiedError>(error: E): Failure<E>; isOk<T, E>(result: Result<T, E>): result is Success<T>; ... 7 more ...; fromPromise<T>(promise: Promise<...>, errorMapper?: ((error: unknown) => UnifiedError) | undefined): Promise<...>; }'.
          return Result.success({ valid: true, fieldCount: 3 });
[0m[31m                        ~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/result_type_performance_test.ts[0m:[0m[33m245[0m:[0m[33m25[0m

[0m[1mTS7006 [0m[ERROR]: Parameter 'result' implicitly has an 'any' type.
        .flatMap(result => {
[0m[31m                 ~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/result_type_performance_test.ts[0m:[0m[33m247[0m:[0m[33m18[0m

[0m[1mTS2339 [0m[ERROR]: Property 'failure' does not exist on type '{ ok<T>(data: T): Success<T>; err<E = UnifiedError>(error: E): Failure<E>; isOk<T, E>(result: Result<T, E>): result is Success<T>; ... 7 more ...; fromPromise<T>(promise: Promise<...>, errorMapper?: ((error: unknown) => UnifiedError) | undefined): Promise<...>; }'.
            return Result.failure<ValidationResult, UnifiedError>(
[0m[31m                          ~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/result_type_performance_test.ts[0m:[0m[33m250[0m:[0m[33m27[0m

[0m[1mTS2339 [0m[ERROR]: Property 'success' does not exist on type '{ ok<T>(data: T): Success<T>; err<E = UnifiedError>(error: E): Failure<E>; isOk<T, E>(result: Result<T, E>): result is Success<T>; ... 7 more ...; fromPromise<T>(promise: Promise<...>, errorMapper?: ((error: unknown) => UnifiedError) | undefined): Promise<...>; }'.
          return Result.success(result);
[0m[31m                        ~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/result_type_performance_test.ts[0m:[0m[33m254[0m:[0m[33m25[0m

[0m[1mTS7006 [0m[ERROR]: Parameter 'result' implicitly has an 'any' type.
        .flatMap(result => {
[0m[31m                 ~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/result_type_performance_test.ts[0m:[0m[33m256[0m:[0m[33m18[0m

[0m[1mTS2339 [0m[ERROR]: Property 'success' does not exist on type '{ ok<T>(data: T): Success<T>; err<E = UnifiedError>(error: E): Failure<E>; isOk<T, E>(result: Result<T, E>): result is Success<T>; ... 7 more ...; fromPromise<T>(promise: Promise<...>, errorMapper?: ((error: unknown) => UnifiedError) | undefined): Promise<...>; }'.
          return Result.success({ ...result, valid: true });
[0m[31m                        ~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/result_type_performance_test.ts[0m:[0m[33m258[0m:[0m[33m25[0m

[0m[1mTS2339 [0m[ERROR]: Property 'success' does not exist on type '{ ok<T>(data: T): Success<T>; err<E = UnifiedError>(error: E): Failure<E>; isOk<T, E>(result: Result<T, E>): result is Success<T>; ... 7 more ...; fromPromise<T>(promise: Promise<...>, errorMapper?: ((error: unknown) => UnifiedError) | undefined): Promise<...>; }'.
        let result = Result.success<number, UnifiedError>(i);
[0m[31m                            ~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/result_type_performance_test.ts[0m:[0m[33m327[0m:[0m[33m29[0m

[0m[1mTS7006 [0m[ERROR]: Parameter 'n' implicitly has an 'any' type.
          result = result.map(n => n + 1);
[0m[31m                              ^[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/result_type_performance_test.ts[0m:[0m[33m331[0m:[0m[33m31[0m

[0m[1mTS2339 [0m[ERROR]: Property 'unwrapOr' does not exist on type 'Result<number, UnifiedError>'.
  Property 'unwrapOr' does not exist on type 'Failure<UnifiedError>'.
      const evaluated = results.slice(0, 100).map(r => r.unwrapOr(0));
[0m[31m                                                         ~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/result_type_performance_test.ts[0m:[0m[33m338[0m:[0m[33m58[0m

[0m[1mTS2554 [0m[ERROR]: Expected 2 arguments, but got 0.
      const configManager = new ConfigManager();
[0m[31m                            ~~~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/result_type_performance_test.ts[0m:[0m[33m351[0m:[0m[33m29[0m

    An argument for 'appConfigLoader' was not provided.
        private readonly appConfigLoader: AppConfigLoader,
    [0m[36m    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[0m
        at [0m[36mfile:///Users/tettuan/github/breakdownconfig/src/config_manager.ts[0m:[0m[33m40[0m:[0m[33m5[0m

[0m[1mTS2339 [0m[ERROR]: Property 'load' does not exist on type 'ConfigManager'.
        const result = await configManager.load();
[0m[31m                                           ~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/result_type_performance_test.ts[0m:[0m[33m357[0m:[0m[33m44[0m

[0m[1mTS7006 [0m[ERROR]: Parameter 'config' implicitly has an 'any' type.
          .map(config => config.working_dir)
[0m[31m               ~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/result_type_performance_test.ts[0m:[0m[33m360[0m:[0m[33m16[0m

[0m[1mTS7006 [0m[ERROR]: Parameter 'dir' implicitly has an 'any' type.
          .flatMap(dir => {
[0m[31m                   ~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/result_type_performance_test.ts[0m:[0m[33m361[0m:[0m[33m20[0m

[0m[1mTS2339 [0m[ERROR]: Property 'success' does not exist on type '{ ok<T>(data: T): Success<T>; err<E = UnifiedError>(error: E): Failure<E>; isOk<T, E>(result: Result<T, E>): result is Success<T>; ... 7 more ...; fromPromise<T>(promise: Promise<...>, errorMapper?: ((error: unknown) => UnifiedError) | undefined): Promise<...>; }'.
            return Result.success(`processed-${i}-${dir}`);
[0m[31m                          ~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/result_type_performance_test.ts[0m:[0m[33m363[0m:[0m[33m27[0m

[0m[1mTS7006 [0m[ERROR]: Parameter 'r' implicitly has an 'any' type.
      const successCount = results.filter(r => r.isOk()).length;
[0m[31m                                          ^[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/integration/result_type_performance_test.ts[0m:[0m[33m372[0m:[0m[33m43[0m

[0m[1mTS2554 [0m[ERROR]: Expected 1 arguments, but got 2.
  ensureDirSync(TEST_DIR, { recursive: true });
[0m[31m                          ~~~~~~~~~~~~~~~~~~~[0m
    at [0m[36mfile:///Users/tettuan/github/breakdownconfig/tests/performance/large_config_test.ts[0m:[0m[33m62[0m:[0m[33m27[0m

Found 256 errors.

[0m[1m[31merror[0m: Type checking failed.

  [33minfo:[39m The program failed type-checking, but it still might work correctly.
  [36mhint:[39m Re-run with [4m--no-check[24m to skip type-checking.
